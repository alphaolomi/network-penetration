 #!/usr/bin/python 2 3 import time 4 from scapy.all import * 5 6 iface = "wlan0" 7 8 # Nr of max probe responses with different ssids from one addr 9 max_ssids_per_addr = 5 10 probe_resp = {} 11 12 # Nr of max deauths in timespan seconds 13 nr_of_max_deauth = 10 14 deauth_timespan = 23 15 deauths = {} 16 17 # Detect deauth flood and ssid spoofing 18 def handle_packet(pkt): 19 # Got deauth packet 20 if pkt.haslayer(Dot11Deauth): 21 deauths.setdefault(pkt.addr2, []).append(time.time()) 22 span = deauths[pkt.addr2][-1] - deauths[pkt.addr2][0] 23 24 # Detected enough deauths? Check the timespan 25 if len(deauths[pkt.addr2]) == nr_of_max_deauth and \ 26 span <= deauth_timespan: 27 print "Detected deauth flood from: " + pkt.addr2 28 del deauths[pkt.addr2] 29 30 # Got probe response 31 elif pkt.haslayer(Dot11ProbeResp): 32 probe_resp.setdefault(pkt.addr2, set()).add(pkt.info) 33 34 # Detected too much ssids from one addr? 35 if len(probe_resp[pkt.addr2]) == max_ssids_per_addr: 36 print "Detected ssid spoofing from " + pkt.addr2 37 38 for ssid in probe_resp[pkt.addr2]: 39 print ssid 40
134 8 Wiﬁ Fun
41 print "" 42 del probe_resp[pkt.addr2] 43 44 45 # Parse parameter 46 if len(sys.argv) > 1: 47 iface = sys.argv[1] 48 49 # Set device into monitor mode 50 os.system("iwconfig " + iface + " mode monitor") 51 52 # Start sniffing 53 print "Sniffing on interface " + iface 54 sniff(iface=iface, prn=handle_packet) 