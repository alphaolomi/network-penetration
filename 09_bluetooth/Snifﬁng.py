hcidump -X -i hci0

#!/usr/bin/python 2 3 import sys 4 import struct 5 import bluetooth._bluetooth as bt 6 7 # Open hci socket 8 sock = bt.hci_open_dev(0)
9.10 SnifÔ¨Ång 147
9 10 # Get data direction information 11 sock.setsockopt(bt.SOL_HCI, bt.HCI_DATA_DIR, 1) 12 13 # Get timestamps 14 sock.setsockopt(bt.SOL_HCI, bt.HCI_TIME_STAMP, 1) 15 16 # Construct and set filter to sniff all hci events 17 # and all packet types 18 filter = bt.hci_filter_new() 19 bt.hci_filter_all_events(filter) 20 bt.hci_filter_all_ptypes(filter) 21 sock.setsockopt(bt.SOL_HCI, bt.HCI_FILTER, filter) 22 23 # Start sniffing 24 while True: 25 # Read first 3 byte 26 header = sock.recv(3) 27 28 if header: 29 # Decode them and read the rest of the packet 30 ptype, event, plen = struct.unpack("BBB", header) 31 packet = sock.recv(plen) 32 33 print "Ptype: " + str(ptype) + " Event: " + str(event) 34 print "Packet: " 35 36 # Got ACL data connection? Try to dump it in ascii 37 # otherwise dump the packet in hex 38 if ptype == bt.HCI_ACLDATA_PKT: 39 print packet + "\n" 40 else: 41 for c in packet: 42 hex = struct.unpack("B",c)[0] 43 sys.stdout.write("%02x " % hex) 44 print "\n" 45 46 # Got no data 47 else: 48 break 49 50 sock.close()