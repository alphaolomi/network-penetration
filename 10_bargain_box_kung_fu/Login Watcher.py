#!/usr/bin/python 2 3 import os 4 import re 5 import tailer 6 import random 7 8 9 logfile = "/var/log/auth.log" 10 max_failed = 3 11 max_failed_cmd = "/sbin/shutdown -h now" 12 failed_login = {} 13 14 success_patterns = [ 15 re.compile("Accepted password for (?P<user>.+?) from \ 16 (?P<host>.+?) port"), 17 re.compile("session opened for user (?P<user>.+?) by"), 18 ] 19 20 failed_patterns = [ 21 re.compile("Failed password for (?P<user>.+?) from \ 22 (?P<host>.+?) port"), 23 re.compile("FAILED LOGIN (\(\d\)) on ‘(.+?)’ FOR \ 24 ‘(?P<user>.+?)’"), 25 re.compile("authentication failure\;.+?\ 26 user\=(?P<user>.+?)\s+.+?\s+user\=(.+)") 27 ] 28 29 shutdown_msgs = [ 30 "Eat my shorts", 31 "Follow the white rabbit", 32 "System will explode in three seconds!", 33 "Go home and leave me alone.", 34 "Game... Over!" 35 ] 36 37 38 def check_match(line, pattern, failed_login_check):
10.7 Login Watcher 159
39 found = False 40 match = pattern.search(line) 41 42 if(match != None): 43 found = True 44 failed_login.setdefault(match.group(’user’), 0) 45 46 # Remote login failed 47 if(match.group(’host’) != None and failed_login_check): 48 os.system("echo ’Login for user " + \ 49 match.group(’user’) + \ 50 " from host " + match.group (’host’) + \ 51 " failed!’ | festival --tts") 52 failed_login[match.group(’user’)] += 1 53 54 # Remote login successfull 55 elif(match.group(’host’) != None and \ 56 not failed_login_check): 57 os.system("echo ’User " + match.group(’user’) + \ 58 " logged in from host " + \ 59 match.group(’host’) + \ 60 "’ | festival --tts") 61 failed_login[match.group(’user’)] = 0 62 63 # Local login failed 64 elif(match.group(’user’) != "CRON" and \ 65 failed_login_check): 66 os.system("echo ’User " + match.group(’user’) + \ 67 " logged in’ | festival --tts") 68 failed_login[match.group(’user’)] += 1 69 70 # Local login successfull 71 elif(match.group(’user’) != "CRON" and \ 72 not failed_login_check): 73 os.system("echo ’User " + match.group(’user’) + \ 74 " logged in’ | festival --tts") 75 failed_login[match.group(’user’)] = 0 76 77 # Too many failed login? 78 if failed_login[match.group(’user’)] >= max_failed: 79 os.system("echo ’" + random.choice(shutdown_msgs) + \ 80 "’ | festival --tts") 81 os.system(max_failed_cmd) 82 83 return found 84
160 10 Bargain Box Kung Fu
85 86 for line in tailer.follow(open(logfile)): 87 found = False 88 89 for pattern in failed_patterns: 90 found = check_match(line, pattern, True) 91 if found: break 92 93 if not found: 94 for pattern in success_patterns: 95 found = check_match(line, pattern, False) 96 if found: break